{"version":3,"sources":["Asset.js","Companies.js","Units.js","Users.js","Theme.js","App.js","reportWebVitals.js","index.js"],"names":["highchartsMore","Highcharts","solidGauge","gaugeOptions","chart","type","title","pane","center","size","startAngle","endAngle","background","backgroundColor","defaultOptions","legend","innerRadius","outerRadius","shape","exporting","enabled","tooltip","yAxis","stops","lineWidth","tickWidth","minorTickInterval","tickAmount","y","labels","plotOptions","solidgauge","dataLabels","borderWidth","useHTML","HealthScoreChart","props","highcharts","options","merge","min","max","text","credits","series","name","data","record","healthscore","format","valueSuffix","AssetView","Show","TabbedShowLayout","Tab","label","style","fontWeight","TextField","source","ImageField","ReferenceField","reference","path","NumberField","DateField","AssetList","List","Datagrid","rowClick","className","AssetEdit","Edit","SimpleForm","TextInput","NumberInput","ReferenceInput","SelectInput","optionText","AssetCreate","Create","EditTitle","sensors","CompanyList","CompanyEdit","CompanyCreate","UnitList","UnitEdit","UnitCreate","UserList","EmailField","UserEdit","UserCreate","rawTheme","palette","createPalette","defaultTheme","secondary","main","Theme","createTheme","dataProvider","jsonServerProvider","App","Admin","theme","Resource","list","show","edit","create","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c9a1888.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  List,\r\n  TextField,\r\n  NumberField,\r\n  ReferenceField,\r\n  Datagrid,\r\n  ImageField,\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  NumberInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  Create,\r\n  Show,\r\n  TabbedShowLayout,\r\n  Tab,\r\n  DateField,\r\n} from \"react-admin\";\r\nimport Highcharts from \"highcharts\";\r\nimport highchartsMore from \"highcharts/highcharts-more\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport solidGauge from \"highcharts/modules/solid-gauge\";\r\nimport \"./Style.css\";\r\n\r\nhighchartsMore(Highcharts);\r\nsolidGauge(Highcharts);\r\n\r\nvar gaugeOptions = {\r\n  chart: {\r\n    type: \"solidgauge\",\r\n  },\r\n\r\n  title: null,\r\n\r\n  pane: {\r\n    center: [\"50%\", \"85%\"],\r\n    size: \"140%\",\r\n    startAngle: -90,\r\n    endAngle: 90,\r\n    background: {\r\n      backgroundColor:\r\n        Highcharts.defaultOptions.legend.backgroundColor || \"#EEE\",\r\n      innerRadius: \"60%\",\r\n      outerRadius: \"100%\",\r\n      shape: \"arc\",\r\n    },\r\n  },\r\n\r\n  exporting: {\r\n    enabled: false,\r\n  },\r\n\r\n  tooltip: {\r\n    enabled: false,\r\n  },\r\n\r\n  // the value axis\r\n  yAxis: {\r\n    stops: [\r\n      [0.2, \"#DF5353\"], // red\r\n      [0.4, \"#DDDF0D\"], // yellow\r\n      [0.7, \"#55BF3B\"], // green\r\n    ],\r\n    lineWidth: 0,\r\n    tickWidth: 0,\r\n    minorTickInterval: null,\r\n    tickAmount: 2,\r\n    title: {\r\n      y: -70,\r\n    },\r\n    labels: {\r\n      y: 16,\r\n    },\r\n  },\r\n\r\n  plotOptions: {\r\n    solidgauge: {\r\n      dataLabels: {\r\n        y: 5,\r\n        borderWidth: 0,\r\n        useHTML: true,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst HealthScoreChart = (props) => {\r\n  return (\r\n    <HighchartsReact\r\n      highcharts={Highcharts}\r\n      options={Highcharts.merge(gaugeOptions, {\r\n        yAxis: {\r\n          min: 0,\r\n          max: 100,\r\n          title: {\r\n            text: \"Health Score\",\r\n          },\r\n        },\r\n\r\n        credits: {\r\n          enabled: false,\r\n        },\r\n\r\n        series: [\r\n          {\r\n            name: \"HealthScore\",\r\n            data: [props.record.healthscore],\r\n            dataLabels: {\r\n              format:\r\n                '<div style=\"text-align:center\">' +\r\n                '<span style=\"font-size:25px\">{y}</span><br/>' +\r\n                '<span style=\"font-size:12px;opacity:0.4\"> Health Score</span>' +\r\n                \"</div>\",\r\n            },\r\n            tooltip: {\r\n              valueSuffix: \" Unit\",\r\n            },\r\n          },\r\n        ],\r\n      })}\r\n    />\r\n  );\r\n};\r\n\r\nexport const AssetView = (props) => {\r\n  return (\r\n    <Show {...props}>\r\n      <TabbedShowLayout>\r\n        <Tab label=\"Informações Gerais\" style={{ fontWeight: \"bold\" }}>\r\n          <TextField label=\"Id\" source=\"id\" />\r\n          <TextField source=\"model\" />\r\n          <TextField source=\"name\" />\r\n          <TextField source=\"sensors\" />\r\n          <ImageField source=\"image\" />\r\n          <ReferenceField source=\"unitId\" reference=\"units\">\r\n            <TextField source=\"id\" />\r\n          </ReferenceField>\r\n          <ReferenceField source=\"companyId\" reference=\"companies\">\r\n            <TextField source=\"id\" />\r\n          </ReferenceField>\r\n        </Tab>\r\n        <Tab label=\"Métricas\" path=\"metrics\" style={{ fontWeight: \"bold\" }}>\r\n          <TextField source=\"status\" />\r\n          <NumberField source=\"metrics.totalCollectsUptime\" />\r\n          <DateField source=\"metrics.lastUptimeAt\" />\r\n          <NumberField source=\"metrics.totalUptime\" />\r\n          <HealthScoreChart {...props} />\r\n        </Tab>\r\n        <Tab label=\"Especificações\" path=\"specs\" style={{ fontWeight: \"bold\" }}>\r\n          <NumberField source=\"specifications.maxTemp\" />\r\n          <TextField source=\"model\" />\r\n        </Tab>\r\n      </TabbedShowLayout>\r\n    </Show>\r\n  );\r\n};\r\n\r\nexport const AssetList = (props) => (\r\n  <List {...props}>\r\n    <Datagrid rowClick=\"show\" className=\"assetList\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"sensors\" />\r\n      <TextField source=\"model\" />\r\n      <TextField source=\"status\" />\r\n      <NumberField source=\"healthscore\" />\r\n      <TextField source=\"name\" />\r\n      <ImageField source=\"image\" />\r\n      <ReferenceField source=\"unitId\" reference=\"units\">\r\n        <TextField source=\"id\" />\r\n      </ReferenceField>\r\n      <ReferenceField source=\"companyId\" reference=\"companies\">\r\n        <TextField source=\"id\" />\r\n      </ReferenceField>\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const AssetEdit = (props) => (\r\n  <Edit title={<EditTitle />} {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"sensors\" />\r\n      <TextInput source=\"model\" />\r\n      <TextInput source=\"status\" />\r\n      <NumberInput source=\"healthscore\" />\r\n      <TextInput source=\"name\" />\r\n      <TextInput source=\"image\" />\r\n      <NumberInput source=\"specifications.maxTemp\" />\r\n      <NumberInput source=\"metrics.totalCollectsUptime\" />\r\n      <ReferenceInput source=\"unitId\" reference=\"units\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"companyId\" reference=\"companies\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"responsible\" reference=\"users\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const AssetCreate = (props) => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"sensors\" />\r\n      <TextInput source=\"model\" />\r\n      <TextInput source=\"status\" />\r\n      <NumberInput source=\"healthscore\" />\r\n      <TextInput source=\"name\" />\r\n      <TextInput source=\"image\" />\r\n      <NumberInput source=\"specifications.maxTemp\" />\r\n      <NumberInput source=\"metrics.totalCollectsUptime\" />\r\n      <ReferenceInput source=\"unitId\" reference=\"units\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"companyId\" reference=\"companies\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst EditTitle = ({ record }) => {\r\n  return <span>Edit {record ? `${record.sensors}` : \"\"}</span>;\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  List,\r\n  TextField,\r\n  Datagrid,\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  Create,\r\n} from \"react-admin\";\r\n\r\nexport const CompanyList = (props) => (\r\n  <List {...props}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const CompanyEdit = (props) => (\r\n  <Edit title={<EditTitle />} {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const CompanyCreate = (props) => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst EditTitle = ({ record }) => {\r\n  return <span>Edit {record ? `${record.name}` : \"\"}</span>;\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  List,\r\n  TextField,\r\n  ReferenceField,\r\n  Datagrid,\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  Create,\r\n} from \"react-admin\";\r\n\r\nexport const UnitList = (props) => (\r\n  <List {...props}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <ReferenceField source=\"companyId\" reference=\"companies\">\r\n        <TextField source=\"id\" />\r\n      </ReferenceField>\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const UnitEdit = (props) => (\r\n  <Edit title={<EditTitle />} {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n      <ReferenceInput source=\"companyId\" reference=\"companies\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const UnitCreate = (props) => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n      <ReferenceInput source=\"companyId\" reference=\"companies\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst EditTitle = ({ record }) => {\r\n  return <span>Edit {record ? `${record.name}` : \"\"}</span>;\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  List,\r\n  TextField,\r\n  ReferenceField,\r\n  Datagrid,\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  Create,\r\n  EmailField,\r\n} from \"react-admin\";\r\n\r\nexport const UserList = (props) => (\r\n  <List {...props}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <EmailField source=\"email\" />\r\n      <TextField source=\"name\" />\r\n      <ReferenceField source=\"unitId\" reference=\"units\">\r\n        <TextField source=\"id\" />\r\n      </ReferenceField>\r\n      <ReferenceField source=\"companyId\" reference=\"companies\">\r\n        <TextField source=\"id\" />\r\n      </ReferenceField>\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const UserEdit = (props) => (\r\n  <Edit title={<EditTitle />} {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"email\" />\r\n      <TextInput source=\"name\" />\r\n      <ReferenceInput source=\"unitId\" reference=\"units\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"companyId\" reference=\"companies\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const UserCreate = (props) => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"email\" />\r\n      <TextInput source=\"name\" />\r\n      <ReferenceInput source=\"unitId\" reference=\"units\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"companyId\" reference=\"companies\">\r\n        <SelectInput optionText=\"id\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst EditTitle = ({ record }) => {\r\n  return <span>Edit {record ? `${record.name}` : \"\"}</span>;\r\n};\r\n","import { defaultTheme } from \"react-admin\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\nimport merge from \"lodash/merge\";\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\n\r\nconst palette = createPalette(\r\n  merge({}, defaultTheme.palette, {\r\n    secondary: {\r\n      main: \"#020eba\",\r\n    },\r\n  })\r\n);\r\n\r\nconst rawTheme = {\r\n  palette,\r\n};\r\n\r\nexport const Theme = createTheme(merge({}, defaultTheme, rawTheme));\r\n","import * as React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport { AssetList, AssetView } from \"./Asset\";\nimport { AssetEdit, AssetCreate } from \"./Asset\";\nimport { CompanyList, CompanyEdit, CompanyCreate } from \"./Companies\";\nimport { UnitList, UnitEdit, UnitCreate } from \"./Units\";\nimport { UserList, UserEdit, UserCreate } from \"./Users\";\nimport { Theme } from \"./Theme\";\n\nconst dataProvider = jsonServerProvider(\n  \"https://my-json-server.typicode.com/tractian/fake-api/\"\n);\nconst App = () => (\n  <Admin dataProvider={dataProvider} theme={Theme}>\n    <Resource\n      name=\"assets\"\n      list={AssetList}\n      show={AssetView}\n      edit={AssetEdit}\n      create={AssetCreate}\n    />\n    <Resource\n      name=\"companies\"\n      list={CompanyList}\n      edit={CompanyEdit}\n      create={CompanyCreate}\n    />\n    <Resource\n      name=\"units\"\n      list={UnitList}\n      edit={UnitEdit}\n      create={UnitCreate}\n    />\n    <Resource\n      name=\"users\"\n      list={UserList}\n      edit={UserEdit}\n      create={UserCreate}\n    />\n  </Admin>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}